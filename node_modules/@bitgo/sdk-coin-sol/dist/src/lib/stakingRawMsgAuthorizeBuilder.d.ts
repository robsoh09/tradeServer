import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { BaseAddress, BaseKey, BaseTransaction, BaseTransactionBuilder, TransactionType } from '@bitgo/sdk-core';
import { Transaction } from './transaction';
import BigNumber from 'bignumber.js';
export declare class StakingRawMsgAuthorizeBuilder extends BaseTransactionBuilder {
    protected _transaction: Transaction;
    protected _transactionMessage: string;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    /** @inheritdoc */
    initBuilder(tx: Transaction): void;
    /**
     * The raw message generated by Solana CLI.
     *
     * @param {string} msg msg generated by 'solana stake-authorize-check.
     * @returns {StakeBuilder} This staking builder.
     *
     */
    transactionMessage(msg: string): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
    validateTransaction(tx: Transaction): boolean;
    build(): Promise<Transaction>;
    protected validateMessage(msg: string): boolean;
    protected fromImplementation(rawTransaction: string): Transaction;
    protected signImplementation(key: BaseKey): BaseTransaction;
    protected get transaction(): Transaction;
    validateAddress(address: BaseAddress, addressFormat?: string): void;
    validateKey(key: BaseKey): void;
    validateRawTransaction(rawTransaction: string): void;
    validateValue(value: BigNumber): void;
}
//# sourceMappingURL=stakingRawMsgAuthorizeBuilder.d.ts.map