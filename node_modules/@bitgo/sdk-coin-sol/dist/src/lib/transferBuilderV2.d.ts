import { TransactionBuilder } from './transactionBuilder';
import { TransactionType } from '@bitgo/sdk-core';
import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { Transaction } from './transaction';
export interface SendParams {
    address: string;
    amount: string;
    tokenName?: string;
}
export declare class TransferBuilderV2 extends TransactionBuilder {
    private _sendParams;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    initBuilder(tx: Transaction): void;
    /**
     * Set a feePayer
     * @param payerAddress
     */
    feePayer(payerAddress: string): this;
    /**
     *  Set a transfer
     *
     * @param {SendParams} sendParams - sendParams
     * @returns {TransactionBuilder} This transaction builder
     */
    send(sendParams: SendParams): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
}
//# sourceMappingURL=transferBuilderV2.d.ts.map