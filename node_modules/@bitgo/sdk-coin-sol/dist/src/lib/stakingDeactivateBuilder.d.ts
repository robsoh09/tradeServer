import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { TransactionType } from '@bitgo/sdk-core';
import { Transaction } from './transaction';
import { TransactionBuilder } from './transactionBuilder';
export declare class StakingDeactivateBuilder extends TransactionBuilder {
    protected _stakingAddress: string;
    protected _stakingAddresses: string[];
    protected _amount?: string;
    protected _unstakingAddress: string;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    /** @inheritdoc */
    initBuilder(tx: Transaction): void;
    /**
     * The staking address of the staking account.
     *
     * @param {string} stakingAddress public address of the staking account
     * @returns {StakingDeactivateBuilder} This staking deactivate builder.
     *
     * @see https://docs.solana.com/staking/stake-accounts#account-address
     */
    stakingAddress(stakingAddress: string): this;
    /**
     * The staking addresses of the staking account.
     *
     * @param {string[]} stakingAddresses public address of the staking accounts
     * @returns {StakingDeactivateBuilder} This staking deactivate builder.
     *
     * @see https://docs.solana.com/staking/stake-accounts#account-address
     */
    stakingAddresses(stakingAddresses: string[]): this;
    /**
     * Optional amount to unstake expressed in Lamports, 1 SOL = 1_000_000_000 lamports, to be used
     * when partially unstaking. If not given then the entire staked amount will be unstaked.
     *
     * @param {string} amount The partial amount to unstake, expressed in Lamports.
     * @returns {StakingDeactivateBuilder} This staking builder.
     *
     * @see https://docs.solana.com/cli/delegate-stake#split-stake
     */
    amount(amount: string): this;
    /**
     * When partially unstaking move the amount to unstake to this account and initiate the
     * unstake process. The original stake account will continue staking.
     *
     * @param {string} unstakingAddress An account used to unstake a partial amount.
     * @returns {StakingDeactivateBuilder} This staking builder.
     *
     * @see https://docs.solana.com/cli/delegate-stake#split-stake
     */
    unstakingAddress(unstakingAddress: string): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
}
//# sourceMappingURL=stakingDeactivateBuilder.d.ts.map