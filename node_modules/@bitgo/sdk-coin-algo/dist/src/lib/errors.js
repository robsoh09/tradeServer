"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyDilutionError = exports.AddressValidationError = exports.InsufficientFeeError = void 0;
const sdk_core_1 = require("@bitgo/sdk-core");
class InsufficientFeeError extends sdk_core_1.BuildTransactionError {
    constructor(providedFee, minimum) {
        super(`The provided fee of '${providedFee}' microalgos cannot be less than the ` +
            `minimum fee of '${minimum}' microalgos`);
        this.name = InsufficientFeeError.name;
    }
}
exports.InsufficientFeeError = InsufficientFeeError;
class AddressValidationError extends sdk_core_1.BuildTransactionError {
    constructor(malformedAddress) {
        super(`The address '${malformedAddress}' is not a well-formed algorand address`);
        this.name = AddressValidationError.name;
    }
}
exports.AddressValidationError = AddressValidationError;
class KeyDilutionError extends sdk_core_1.BuildTransactionError {
    constructor(incorrectValue) {
        super(`The keyDilution value '${incorrectValue}' must be less than or equal to the square root of the voteKey validity range.`);
        this.name = KeyDilutionError.name;
    }
}
exports.KeyDilutionError = KeyDilutionError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOENBQXdEO0FBRXhELE1BQWEsb0JBQXFCLFNBQVEsZ0NBQXFCO0lBQzdELFlBQVksV0FBbUIsRUFBRSxPQUFlO1FBQzlDLEtBQUssQ0FDSCx3QkFBd0IsV0FBVyx1Q0FBdUM7WUFDeEUsbUJBQW1CLE9BQU8sY0FBYyxDQUMzQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLElBQUksR0FBRyxvQkFBb0IsQ0FBQyxJQUFJLENBQUM7SUFDeEMsQ0FBQztDQUNGO0FBUkQsb0RBUUM7QUFFRCxNQUFhLHNCQUF1QixTQUFRLGdDQUFxQjtJQUMvRCxZQUFZLGdCQUF3QjtRQUNsQyxLQUFLLENBQUMsZ0JBQWdCLGdCQUFnQix5Q0FBeUMsQ0FBQyxDQUFDO1FBQ2pGLElBQUksQ0FBQyxJQUFJLEdBQUcsc0JBQXNCLENBQUMsSUFBSSxDQUFDO0lBQzFDLENBQUM7Q0FDRjtBQUxELHdEQUtDO0FBQ0QsTUFBYSxnQkFBaUIsU0FBUSxnQ0FBcUI7SUFDekQsWUFBWSxjQUFzQjtRQUNoQyxLQUFLLENBQ0gsMEJBQTBCLGNBQWMsZ0ZBQWdGLENBQ3pILENBQUM7UUFDRixJQUFJLENBQUMsSUFBSSxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQztJQUNwQyxDQUFDO0NBQ0Y7QUFQRCw0Q0FPQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1aWxkVHJhbnNhY3Rpb25FcnJvciB9IGZyb20gJ0BiaXRnby9zZGstY29yZSc7XG5cbmV4cG9ydCBjbGFzcyBJbnN1ZmZpY2llbnRGZWVFcnJvciBleHRlbmRzIEJ1aWxkVHJhbnNhY3Rpb25FcnJvciB7XG4gIGNvbnN0cnVjdG9yKHByb3ZpZGVkRmVlOiBudW1iZXIsIG1pbmltdW06IG51bWJlcikge1xuICAgIHN1cGVyKFxuICAgICAgYFRoZSBwcm92aWRlZCBmZWUgb2YgJyR7cHJvdmlkZWRGZWV9JyBtaWNyb2FsZ29zIGNhbm5vdCBiZSBsZXNzIHRoYW4gdGhlIGAgK1xuICAgICAgICBgbWluaW11bSBmZWUgb2YgJyR7bWluaW11bX0nIG1pY3JvYWxnb3NgXG4gICAgKTtcbiAgICB0aGlzLm5hbWUgPSBJbnN1ZmZpY2llbnRGZWVFcnJvci5uYW1lO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBBZGRyZXNzVmFsaWRhdGlvbkVycm9yIGV4dGVuZHMgQnVpbGRUcmFuc2FjdGlvbkVycm9yIHtcbiAgY29uc3RydWN0b3IobWFsZm9ybWVkQWRkcmVzczogc3RyaW5nKSB7XG4gICAgc3VwZXIoYFRoZSBhZGRyZXNzICcke21hbGZvcm1lZEFkZHJlc3N9JyBpcyBub3QgYSB3ZWxsLWZvcm1lZCBhbGdvcmFuZCBhZGRyZXNzYCk7XG4gICAgdGhpcy5uYW1lID0gQWRkcmVzc1ZhbGlkYXRpb25FcnJvci5uYW1lO1xuICB9XG59XG5leHBvcnQgY2xhc3MgS2V5RGlsdXRpb25FcnJvciBleHRlbmRzIEJ1aWxkVHJhbnNhY3Rpb25FcnJvciB7XG4gIGNvbnN0cnVjdG9yKGluY29ycmVjdFZhbHVlOiBudW1iZXIpIHtcbiAgICBzdXBlcihcbiAgICAgIGBUaGUga2V5RGlsdXRpb24gdmFsdWUgJyR7aW5jb3JyZWN0VmFsdWV9JyBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byB0aGUgc3F1YXJlIHJvb3Qgb2YgdGhlIHZvdGVLZXkgdmFsaWRpdHkgcmFuZ2UuYFxuICAgICk7XG4gICAgdGhpcy5uYW1lID0gS2V5RGlsdXRpb25FcnJvci5uYW1lO1xuICB9XG59XG4iXX0=