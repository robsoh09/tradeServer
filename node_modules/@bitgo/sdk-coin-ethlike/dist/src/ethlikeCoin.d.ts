import EthereumCommon from '@ethereumjs/common';
import { AbstractEthLikeNewCoins } from '@bitgo/abstract-eth';
import { BaseCoin, BitGoBase } from '@bitgo/sdk-core';
import { BaseCoin as StaticsBaseCoin } from '@bitgo/statics';
import { EthLikeTransactionBuilder } from './lib';
export declare class EthLikeCoin extends AbstractEthLikeNewCoins {
    protected constructor(bitgo: BitGoBase, staticsCoin?: Readonly<StaticsBaseCoin>);
    static createInstance(bitgo: BitGoBase, staticsCoin?: Readonly<StaticsBaseCoin>): BaseCoin;
    protected getTransactionBuilder(common?: EthereumCommon): EthLikeTransactionBuilder;
    recoveryBlockchainExplorerQuery(query: Record<string, string>): Promise<Record<string, unknown>>;
}
//# sourceMappingURL=ethlikeCoin.d.ts.map