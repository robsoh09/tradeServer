import { BaseKey, TransactionType } from '@bitgo/sdk-core';
import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { TransactionBuilder } from './transactionBuilder';
import { Transaction } from './transaction';
export declare class StakingDeactivateBuilder extends TransactionBuilder {
    protected _stakingCredentialHash: string;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    /**
     * Uses the stake key to generate a stake deregistration certificate to unstake from a pool
     * @param stakingPublicKey User's public stake key
     *
     */
    stakingCredential(stakingPublicKey: string): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
    /** @inheritdoc */
    protected fromImplementation(rawTransaction: string): Transaction;
    /** @inheritdoc */
    protected signImplementation(key: BaseKey): Transaction;
}
//# sourceMappingURL=stakingDeactivateBuilder.d.ts.map