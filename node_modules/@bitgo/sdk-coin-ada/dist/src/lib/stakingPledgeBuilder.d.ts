import { BaseKey, TransactionType } from '@bitgo/sdk-core';
import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { TransactionBuilder } from './transactionBuilder';
import { Transaction } from './transaction';
export declare class StakingPledgeBuilder extends TransactionBuilder {
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    /** @inheritdoc */
    initBuilder(tx: Transaction): void;
    /**
     * Add node key witness to the transaction to the transaction's witnesses list.
     *
     * @param nodePublicKey Public node key provided by the user.
     * @param nodeKeySignature Signature of the node key provided by the user.
     */
    addNodeKeyWitness(nodePublicKey: string, nodeKeySignature: string): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
    /** @inheritdoc */
    protected fromImplementation(rawTransaction: string): Transaction;
    protected signImplementation(key: BaseKey): Transaction;
}
//# sourceMappingURL=stakingPledgeBuilder.d.ts.map