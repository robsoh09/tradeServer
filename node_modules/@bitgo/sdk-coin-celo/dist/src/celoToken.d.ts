/**
 * @prettier
 */
import { Celo } from './celo';
import { BitGoBase, CoinConstructor, NamedCoinConstructor } from '@bitgo/sdk-core';
import { CeloTokenConfig } from '@bitgo/statics';
export { CeloTokenConfig };
export declare class CeloToken extends Celo {
    readonly tokenConfig: CeloTokenConfig;
    constructor(bitgo: BitGoBase, tokenConfig: CeloTokenConfig);
    static createTokenConstructor(config: CeloTokenConfig): CoinConstructor;
    static createTokenConstructors(): NamedCoinConstructor[];
    get type(): string;
    get name(): string;
    get coin(): string;
    get network(): string;
    get tokenContractAddress(): string;
    get decimalPlaces(): number;
    getChain(): string;
    getBaseChain(): string;
    getFullName(): string;
    getBaseFactor(): number;
    /**
     * Flag for sending value of 0
     * @returns {boolean} True if okay to send 0 value, false otherwise
     */
    valuelessTransferAllowed(): boolean;
    /**
     * Flag for sending data along with transactions
     * @returns {boolean} True if okay to send tx data (CELO), false otherwise
     */
    transactionDataAllowed(): boolean;
}
//# sourceMappingURL=celoToken.d.ts.map