import { CoinFamily } from './base';
export declare enum NetworkType {
    MAINNET = "mainnet",
    TESTNET = "testnet"
}
export declare abstract class BaseNetwork {
    abstract readonly name: string;
    abstract readonly type: NetworkType;
    abstract readonly family: CoinFamily;
    abstract readonly explorerUrl: string | undefined;
}
export interface UtxoNetwork extends BaseNetwork {
    utxolibName: string;
}
export interface AdaNetwork extends BaseNetwork {
    utxolibName: string;
    poolDeposit: number;
    stakeKeyDeposit: number;
    maxValueSize: number;
    maxTransactionSize: number;
    coinsPerUtxoWord: number;
}
export interface AvalancheNetwork extends BaseNetwork {
    readonly alias: string;
    readonly blockchainID: string;
    readonly cChainBlockchainID: string;
    readonly networkID: number;
    readonly hrp: string;
    readonly vm: string;
    readonly creationTxFee: string;
    readonly createSubnetTx: string;
    readonly createChainTx: string;
    readonly minConsumption: string;
    readonly maxConsumption: string;
    readonly maxSupply: string;
    readonly minStake: string;
    readonly minStakeDuration: string;
    readonly maxStakeDuration: string;
    readonly minDelegationStake: string;
    readonly minDelegationFee: string;
    readonly avaxAssetID: string;
    readonly txFee: string;
    readonly maxImportFee: string;
}
export interface AccountNetwork extends BaseNetwork {
    readonly accountExplorerUrl?: string;
    readonly blockExplorerUrl?: string;
}
/**
 * Specification name type of the chain. Used in setting up the registry
 */
export declare type PolkadotSpecNameType = 'kusama' | 'polkadot' | 'westend' | 'statemint' | 'statemine';
export interface DotNetwork extends AccountNetwork {
    readonly specName: PolkadotSpecNameType;
    readonly genesisHash: string;
    readonly specVersion: number;
    readonly chainName: string;
    readonly txVersion: number;
}
export interface EthereumNetwork extends AccountNetwork {
    readonly chainId: number;
    readonly batcherContractAddress?: string;
    readonly forwarderFactoryAddress?: string;
    readonly forwarderImplementationAddress?: string;
    readonly nativeCoinOperationHashPrefix?: string;
    readonly tokenOperationHashPrefix?: string;
}
export interface TronNetwork extends AccountNetwork {
    maxFeeLimit: string;
    contractCallFeeLimit: string;
}
export interface StacksNetwork extends AccountNetwork {
    readonly sendmanymemoContractAddress: string;
    readonly stakingContractAddress: string;
}
export interface OfcNetwork extends BaseNetwork {
}
declare abstract class Mainnet extends BaseNetwork {
    type: NetworkType;
}
declare abstract class Testnet extends BaseNetwork {
    type: NetworkType;
}
declare class Algorand extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class AlgorandTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Ada extends Mainnet implements AdaNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    poolDeposit: number;
    stakeKeyDeposit: number;
    explorerUrl: string;
    coinsPerUtxoWord: number;
    maxTransactionSize: number;
    maxValueSize: number;
}
declare class AdaTestnet extends Testnet implements AdaNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
    coinsPerUtxoWord: number;
    maxTransactionSize: number;
    maxValueSize: number;
    poolDeposit: number;
    stakeKeyDeposit: number;
}
declare class Arbitrum extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
}
declare class ArbitrumTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
}
declare class AvalancheC extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class AvalancheCTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class AvalancheP extends Mainnet implements AvalancheNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    blockchainID: string;
    cChainBlockchainID: string;
    avaxAssetID: string;
    networkID: number;
    hrp: string;
    alias: string;
    vm: string;
    txFee: string;
    maxImportFee: string;
    createSubnetTx: string;
    createChainTx: string;
    creationTxFee: string;
    minConsumption: string;
    maxConsumption: string;
    maxSupply: string;
    minStake: string;
    minStakeDuration: string;
    maxStakeDuration: string;
    minDelegationStake: string;
    minDelegationFee: string;
}
declare class AvalanchePTestnet extends Testnet implements AvalancheNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    blockchainID: string;
    cChainBlockchainID: string;
    avaxAssetID: string;
    networkID: number;
    alias: string;
    hrp: string;
    vm: string;
    txFee: string;
    maxImportFee: string;
    createSubnetTx: string;
    createChainTx: string;
    creationTxFee: string;
    minConsumption: string;
    maxConsumption: string;
    maxSupply: string;
    minStake: string;
    minStakeDuration: string;
    maxStakeDuration: string;
    minDelegationStake: string;
    minDelegationFee: string;
}
declare class BinanceSmartChain extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class BinanceSmartChainTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class Bitcoin extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinCash extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinCashTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinSV extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinSVTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: undefined;
}
declare class BitcoinGold extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinGoldTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: undefined;
}
declare class Dash extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class DashTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class Dogecoin extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class DogecoinTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class ECash extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class ECashTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: undefined;
}
declare class Polkadot extends Mainnet implements DotNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    specName: PolkadotSpecNameType;
    genesisHash: string;
    specVersion: number;
    chainName: string;
    txVersion: number;
}
declare class PolkadotTestnet extends Testnet implements DotNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    specName: PolkadotSpecNameType;
    genesisHash: string;
    specVersion: number;
    chainName: string;
    txVersion: number;
}
declare class Celo extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class CeloTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Casper extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class CasperTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class Ethereum extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    blockExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Ethereum2 extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class EthereumW extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Pyrmont extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class Kovan extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Goerli extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    blockExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Holesky extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    blockExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class EthereumClassic extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class EthereumClassicTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Eos extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class EosTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Hedera extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class HederaTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Litecoin extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class LitecoinTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class Ofc extends Mainnet implements OfcNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class OfcTestnet extends Testnet implements OfcNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class Rbtc extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class RbtcTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Stellar extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class StellarTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Sol extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class SolTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Sui extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class SuiTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Atom extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class AtomTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Osmo extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class OsmoTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Tia extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class TiaTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Hash extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class HashTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Bld extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class BldTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Sei extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class SeiTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Zeta extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class ZetaTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Injective extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class InjectiveTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Kava extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class KavaTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Ton extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class TonTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Coreum extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class CoreumTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Bera extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class BeraTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class Islm extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class IslmTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Stx extends Mainnet implements StacksNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    sendmanymemoContractAddress: string;
    stakingContractAddress: string;
}
declare class StxTestnet extends Testnet implements StacksNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    sendmanymemoContractAddress: string;
    stakingContractAddress: string;
}
declare class SUSD extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class SUSDTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class FiatTestnet extends Testnet implements BaseNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class Fiat extends Mainnet implements BaseNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class Trx extends Mainnet implements TronNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    maxFeeLimit: string;
    contractCallFeeLimit: string;
}
declare class TrxTestnet extends Testnet implements TronNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    maxFeeLimit: string;
    contractCallFeeLimit: string;
}
declare class Xrp extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class XrpTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Xtz extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class XtzTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class ZCash extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class ZCashTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class Near extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    feeReserve: string;
    storageReserve: string;
}
declare class NearTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    feeReserve: string;
    storageReserve: string;
}
declare class Polygon extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
    batcherContractAddress: string;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class PolygonTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
    batcherContractAddress: string;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class Optimism extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
}
declare class OptimismTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
}
declare class ZkSync extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
}
declare class ZkSyncTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
}
declare class BaseChainTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
}
declare class BaseChain extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    nativeCoinOperationHashPrefix: string;
    tokenOperationHashPrefix: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
    walletFactoryAddress: string;
    walletImplementationAddress: string;
}
export declare const Networks: {
    main: {
        ada: Readonly<Ada>;
        algorand: Readonly<Algorand>;
        arbitrum: Readonly<Arbitrum>;
        atom: Readonly<Atom>;
        avalancheC: Readonly<AvalancheC>;
        avalancheP: Readonly<AvalancheP>;
        basechain: Readonly<BaseChain>;
        bitcoin: Readonly<Bitcoin>;
        bitcoinCash: Readonly<BitcoinCash>;
        bitcoinGold: Readonly<BitcoinGold>;
        bitcoinSV: Readonly<BitcoinSV>;
        bera: Readonly<Bera>;
        bld: Readonly<Bld>;
        bsc: Readonly<BinanceSmartChain>;
        casper: Readonly<Casper>;
        celo: Readonly<Celo>;
        coreum: Readonly<Coreum>;
        dash: Readonly<Dash>;
        dogecoin: Readonly<Dogecoin>;
        dot: Readonly<Polkadot>;
        eCash: Readonly<ECash>;
        eos: Readonly<Eos>;
        ethereum: Readonly<Ethereum>;
        ethereum2: Readonly<Ethereum2>;
        ethereumClassic: Readonly<EthereumClassic>;
        ethereumW: Readonly<EthereumW>;
        fiat: Readonly<Fiat>;
        hash: Readonly<Hash>;
        hedera: Readonly<Hedera>;
        injective: Readonly<Injective>;
        islm: Readonly<Islm>;
        kava: Readonly<Kava>;
        litecoin: Readonly<Litecoin>;
        polygon: Readonly<Polygon>;
        ofc: Readonly<Ofc>;
        optimism: Readonly<Optimism>;
        osmo: Readonly<Osmo>;
        rbtc: Readonly<Rbtc>;
        stellar: Readonly<Stellar>;
        sei: Readonly<Sei>;
        sol: Readonly<Sol>;
        sui: Readonly<Sui>;
        near: Readonly<Near>;
        stx: Readonly<Stx>;
        susd: Readonly<SUSD>;
        tia: Readonly<Tia>;
        ton: Readonly<Ton>;
        trx: Readonly<Trx>;
        xrp: Readonly<Xrp>;
        xtz: Readonly<Xtz>;
        zCash: Readonly<ZCash>;
        zeta: Readonly<Zeta>;
        zkSync: Readonly<ZkSync>;
    };
    test: {
        ada: Readonly<AdaTestnet>;
        algorand: Readonly<AlgorandTestnet>;
        arbitrum: Readonly<ArbitrumTestnet>;
        atom: Readonly<AtomTestnet>;
        avalancheC: Readonly<AvalancheCTestnet>;
        avalancheP: Readonly<AvalanchePTestnet>;
        basechain: Readonly<BaseChainTestnet>;
        bitcoin: Readonly<BitcoinTestnet>;
        bitcoinCash: Readonly<BitcoinCashTestnet>;
        bitcoinGold: Readonly<BitcoinGoldTestnet>;
        bitcoinSV: Readonly<BitcoinSVTestnet>;
        bera: Readonly<BeraTestnet>;
        bld: Readonly<BldTestnet>;
        bsc: Readonly<BinanceSmartChainTestnet>;
        casper: Readonly<CasperTestnet>;
        celo: Readonly<CeloTestnet>;
        dash: Readonly<DashTestnet>;
        dogecoin: Readonly<DogecoinTestnet>;
        dot: Readonly<PolkadotTestnet>;
        eCash: Readonly<ECashTestnet>;
        eos: Readonly<EosTestnet>;
        fiat: Readonly<FiatTestnet>;
        pyrmont: Readonly<Pyrmont>;
        ethereumClassicTestnet: Readonly<EthereumClassicTestnet>;
        hash: Readonly<HashTestnet>;
        hedera: Readonly<HederaTestnet>;
        injective: Readonly<InjectiveTestnet>;
        islm: Readonly<IslmTestnet>;
        kava: Readonly<KavaTestnet>;
        kovan: Readonly<Kovan>;
        goerli: Readonly<Goerli>;
        holesky: Readonly<Holesky>;
        litecoin: Readonly<LitecoinTestnet>;
        polygon: Readonly<PolygonTestnet>;
        ofc: Readonly<OfcTestnet>;
        optimism: Readonly<OptimismTestnet>;
        osmo: Readonly<OsmoTestnet>;
        rbtc: Readonly<RbtcTestnet>;
        stellar: Readonly<StellarTestnet>;
        sei: Readonly<SeiTestnet>;
        sol: Readonly<SolTestnet>;
        sui: Readonly<SuiTestnet>;
        near: Readonly<NearTestnet>;
        stx: Readonly<StxTestnet>;
        susd: Readonly<SUSDTestnet>;
        coreum: Readonly<CoreumTestnet>;
        tia: Readonly<TiaTestnet>;
        ton: Readonly<TonTestnet>;
        trx: Readonly<TrxTestnet>;
        xrp: Readonly<XrpTestnet>;
        xtz: Readonly<XtzTestnet>;
        zCash: Readonly<ZCashTestnet>;
        zeta: Readonly<ZetaTestnet>;
        zkSync: Readonly<ZkSyncTestnet>;
    };
};
export {};
//# sourceMappingURL=networks.d.ts.map