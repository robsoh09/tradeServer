"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.supportedRequestMethods = void 0;
exports.supportedRequestMethods = ['get', 'post', 'put', 'del', 'patch', 'options'];
//# sourceMappingURL=data:application/json;base64,