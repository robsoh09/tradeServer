/**
 * @prettier
 */
import { EthLikeToken, CoinNames } from '@bitgo/abstract-eth';
import { EthLikeTokenConfig } from '@bitgo/statics';
import { BitGoBase, CoinConstructor, MPCAlgorithm, NamedCoinConstructor } from '@bitgo/sdk-core';
import { TransactionBuilder } from './lib';
export { EthLikeTokenConfig };
export declare class PolygonToken extends EthLikeToken {
    readonly tokenConfig: EthLikeTokenConfig;
    static coinNames: CoinNames;
    constructor(bitgo: BitGoBase, tokenConfig: EthLikeTokenConfig);
    static createTokenConstructor(config: EthLikeTokenConfig): CoinConstructor;
    static createTokenConstructors(): NamedCoinConstructor[];
    protected getTransactionBuilder(): TransactionBuilder;
    /**
     * Make a query to Polygonscan for information such as balance, token balance, solidity calls
     * @param {Object} query key-value pairs of parameters to append after /api
     * @returns {Promise<Object>} response from Polygonscan
     */
    recoveryBlockchainExplorerQuery(query: Record<string, string>): Promise<Record<string, unknown>>;
    /** @inheritDoc */
    supportsTss(): boolean;
    /** @inheritDoc */
    getMPCAlgorithm(): MPCAlgorithm;
    getFullName(): string;
}
//# sourceMappingURL=polygonToken.d.ts.map