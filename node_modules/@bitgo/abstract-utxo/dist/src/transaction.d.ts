import * as utxolib from '@bitgo/utxo-lib';
import { BitGoBase, IRequestTracer } from '@bitgo/sdk-core';
import { AbstractUtxoCoin, ExplainTransactionOptions, TransactionExplanation, TransactionPrebuild } from './abstractUtxoCoin';
/**
 * Get the inputs for a psbt from a prebuild.
 */
export declare function getPsbtTxInputs(psbtArg: string | utxolib.bitgo.UtxoPsbt, network: utxolib.Network): {
    address: string;
    value: bigint;
    valueString: string;
}[];
/**
 * Get the inputs for a transaction from a prebuild.
 */
export declare function getTxInputs<TNumber extends number | bigint>(params: {
    txPrebuild: TransactionPrebuild<TNumber>;
    bitgo: BitGoBase;
    coin: AbstractUtxoCoin;
    disableNetworking: boolean;
    reqId?: IRequestTracer;
}): Promise<{
    address: string;
    value: TNumber;
    valueString: string;
}[]>;
/**
 * Decompose a raw psbt into useful information, such as the total amounts,
 * change amounts, and transaction outputs.
 */
export declare function explainPsbt<TNumber extends number | bigint>(params: ExplainTransactionOptions<TNumber>, network: utxolib.Network): TransactionExplanation;
/**
 * Decompose a raw transaction into useful information, such as the total amounts,
 * change amounts, and transaction outputs.
 */
export declare function explainTx<TNumber extends number | bigint>(params: ExplainTransactionOptions<TNumber>, coin: AbstractUtxoCoin): TransactionExplanation;
//# sourceMappingURL=transaction.d.ts.map