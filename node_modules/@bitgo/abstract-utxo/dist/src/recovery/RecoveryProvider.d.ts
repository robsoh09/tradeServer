import { AddressInfo, TransactionIO } from '@bitgo/blockapis';
import { bitgo } from '@bitgo/utxo-lib';
declare type Unspent<TNumber extends number | bigint = number> = bitgo.Unspent<TNumber>;
/**
 * An account with bear minimum information required for recoveries.
 */
export interface RecoveryAccountData {
    txCount: number;
    totalBalance: number;
}
/**
 * Factory for AddressApi & UtxoApi
 */
export interface RecoveryProvider<TNumber extends number | bigint = number> {
    getUnspentsForAddresses(addresses: string[]): Promise<Unspent<TNumber>[]>;
    getAddressInfo(address: string): Promise<AddressInfo>;
    getTransactionHex(txid: string): Promise<string>;
    getTransactionIO(txid: string): Promise<TransactionIO>;
}
export declare function forCoin(coinName: string, apiToken?: string): RecoveryProvider<number>;
export {};
//# sourceMappingURL=RecoveryProvider.d.ts.map