import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { TransactionBuilder as EthLikeTransactionBuilder } from '@bitgo/abstract-eth';
import { TransferBuilder } from './transferBuilder';
import { ERC721TransferBuilder, ERC1155TransferBuilder } from './transferBuilders';
/**
 * Ethereum transaction builder.
 */
export declare class TransactionBuilder extends EthLikeTransactionBuilder {
    protected _transfer: TransferBuilder | ERC721TransferBuilder | ERC1155TransferBuilder;
    /**
     * Public constructor.
     *
     * @param _coinConfig
     */
    constructor(_coinConfig: Readonly<CoinConfig>);
    /**
     * Gets the transfer funds builder if exist, or creates a new one for this transaction and returns it
     *
     * @param [data] transfer data to initialize the transfer builder with, empty if none given
     * @returns {TransferBuilder | ERC721TransferBuilder | ERC1155TransferBuilder} the transfer builder
     */
    transfer(data?: string): TransferBuilder | ERC721TransferBuilder | ERC1155TransferBuilder;
}
//# sourceMappingURL=transactionBuilder.d.ts.map