import { BaseAddress, TransactionType } from '@bitgo/sdk-core';
import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { DecodedSignedTx, DecodedSigningPayload, UnsignedTransaction } from '@substrate/txwrapper-core';
import { ProxyType } from './iface';
import { Transaction } from './transaction';
import { TransactionBuilder } from './transactionBuilder';
export declare class RemoveProxyBuilder extends TransactionBuilder {
    protected _delegate: string;
    protected _proxyType: ProxyType;
    protected _delay: string;
    constructor(_coinConfig: Readonly<CoinConfig>);
    /** @inheritDoc */
    protected buildTransaction(): UnsignedTransaction;
    protected get transactionType(): TransactionType;
    /**
     * The proxy account to remove.
     *
     * @param {BaseAddress} owner
     * @returns {AddressInitializationBuilder} This builder.
     *
     * @see https://wiki.polkadot.network/docs/learn-proxies#why-use-a-proxy
     */
    owner(owner: BaseAddress): this;
    /**
     * The proxy type to remove.
     *
     * @param {proxyType} proxyType
     * @returns {AddressInitializationBuilder} This builder.
     *
     * @see https://wiki.polkadot.network/docs/learn-proxies#proxy-types
     */
    type(proxyType: ProxyType): this;
    /**
     * The number of blocks that an announcement must be in place for.
     * before the corresponding call may be dispatched.
     * If zero, then no announcement is needed.
     * TODO: move to the validity window method once it has been standardized
     *
     * @param {string} delay
     * @returns {AddressInitializationBuilder} This transfer builder.
     *
     * @see https://wiki.polkadot.network/docs/learn-proxies#time-delayed-proxies
     */
    delay(delay: string): this;
    /** @inheritdoc */
    validateDecodedTransaction(decodedTxn: DecodedSigningPayload | DecodedSignedTx): void;
    /** @inheritdoc */
    protected fromImplementation(rawTransaction: string): Transaction;
    /** @inheritdoc */
    validateTransaction(_: Transaction): void;
    private validateFields;
    private validateRemoveProxyFields;
}
//# sourceMappingURL=proxyBuilder.d.ts.map