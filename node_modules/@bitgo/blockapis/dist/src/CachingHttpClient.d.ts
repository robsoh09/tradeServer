import { BaseHttpClient, HttpClient, Response } from './BaseHttpClient';
export declare class CachingHttpClient implements HttpClient {
    private cacheDir;
    client: BaseHttpClient;
    isHttpEnabled: boolean;
    constructor(cacheDir: string, { client, isHttpEnabled }?: {
        client?: BaseHttpClient | undefined;
        isHttpEnabled?: boolean | undefined;
    });
    cachePath(p: string): string;
    readCache<T>(path: string): Promise<Response<T> | undefined>;
    writeCache<T>(path: string, data: T): Promise<void>;
    get<T>(path: string): Promise<Response<T>>;
    withBaseUrl(baseUrl: string): HttpClient;
}
//# sourceMappingURL=CachingHttpClient.d.ts.map