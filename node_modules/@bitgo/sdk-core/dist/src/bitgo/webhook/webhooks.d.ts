import { IBaseCoin } from '../baseCoin';
import { BitGoBase } from '../bitgoBase';
import { AddOptions, IWebhooks, ListNotificationsOptions, RemoveOptions, SimulateOptions } from './iWebhooks';
export declare class Webhooks implements IWebhooks {
    private bitgo;
    private baseCoin;
    constructor(bitgo: BitGoBase, baseCoin: IBaseCoin);
    /**
     * Fetch list of user webhooks
     *
     * @returns {*}
     */
    list(): Promise<any>;
    /**
     * Add new user webhook
     *
     * @param params
     * @returns {*}
     */
    add({ url, type, label, numConfirmations }: AddOptions): Promise<any>;
    /**
     * Remove user webhook
     *
     * @param params
     * @returns {*}
     */
    remove(params: RemoveOptions): Promise<any>;
    /**
     * Fetch list of webhook notifications for the user
     *
     * @param params
     * @returns {*}
     */
    listNotifications(params?: ListNotificationsOptions): Promise<any>;
    /**
     * Simulate a user webhook
     *
     * @param params
     * @returns {*}
     */
    simulate(params: SimulateOptions): Promise<any>;
}
//# sourceMappingURL=webhooks.d.ts.map