"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports._decryptRsa = void 0;
const crypto_1 = __importDefault(require("crypto"));
/**
 * Decrypts a string using RSA
 * @param {string} privateKey The private key to use for decryption
 * @param {string} encryptedText The text to decrypt
 * @returns {string} The decrypted text
 */
function _decryptRsa(privateKey, encryptedText) {
    const key = crypto_1.default.createPrivateKey(privateKey);
    const decryptedData = crypto_1.default.privateDecrypt({
        key,
        padding: crypto_1.default.constants.RSA_PKCS1_OAEP_PADDING,
        oaepHash: 'sha256',
    }, Buffer.from(encryptedText, 'base64'));
    return decryptedData.toString();
}
exports._decryptRsa = _decryptRsa;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjcnlwdC1yc2EuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvYml0Z28vdHJhZGluZy9uZXR3b3JrL2RlY3J5cHQtcnNhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUE0QjtBQUU1Qjs7Ozs7R0FLRztBQUNILFNBQWdCLFdBQVcsQ0FBQyxVQUFrQixFQUFFLGFBQXFCO0lBQ25FLE1BQU0sR0FBRyxHQUFHLGdCQUFNLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDaEQsTUFBTSxhQUFhLEdBQUcsZ0JBQU0sQ0FBQyxjQUFjLENBQ3pDO1FBQ0UsR0FBRztRQUNILE9BQU8sRUFBRSxnQkFBTSxDQUFDLFNBQVMsQ0FBQyxzQkFBc0I7UUFDaEQsUUFBUSxFQUFFLFFBQVE7S0FDbkIsRUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FDckMsQ0FBQztJQUVGLE9BQU8sYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ2xDLENBQUM7QUFaRCxrQ0FZQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcblxuLyoqXG4gKiBEZWNyeXB0cyBhIHN0cmluZyB1c2luZyBSU0FcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcml2YXRlS2V5IFRoZSBwcml2YXRlIGtleSB0byB1c2UgZm9yIGRlY3J5cHRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBlbmNyeXB0ZWRUZXh0IFRoZSB0ZXh0IHRvIGRlY3J5cHRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBkZWNyeXB0ZWQgdGV4dFxuICovXG5leHBvcnQgZnVuY3Rpb24gX2RlY3J5cHRSc2EocHJpdmF0ZUtleTogc3RyaW5nLCBlbmNyeXB0ZWRUZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBrZXkgPSBjcnlwdG8uY3JlYXRlUHJpdmF0ZUtleShwcml2YXRlS2V5KTtcbiAgY29uc3QgZGVjcnlwdGVkRGF0YSA9IGNyeXB0by5wcml2YXRlRGVjcnlwdChcbiAgICB7XG4gICAgICBrZXksXG4gICAgICBwYWRkaW5nOiBjcnlwdG8uY29uc3RhbnRzLlJTQV9QS0NTMV9PQUVQX1BBRERJTkcsXG4gICAgICBvYWVwSGFzaDogJ3NoYTI1NicsXG4gICAgfSxcbiAgICBCdWZmZXIuZnJvbShlbmNyeXB0ZWRUZXh0LCAnYmFzZTY0JylcbiAgKTtcblxuICByZXR1cm4gZGVjcnlwdGVkRGF0YS50b1N0cmluZygpO1xufVxuIl19