import { IBaseCoin } from '../baseCoin';
import { BitGoBase } from '../bitgoBase';
import { IMarkets, LastDaysOptions, LatestOptions, YesterdayOptions } from '../market';
export declare class Markets implements IMarkets {
    private readonly bitgo;
    private readonly baseCoin;
    constructor(bitgo: BitGoBase, baseCoin: IBaseCoin);
    /**
     * Get the latest price data
     * @param params {}
     * @returns {*} an object containing price and volume data from the
     * current day in a number of currencies
     **/
    latest(params: LatestOptions): Promise<any>;
    /**
     * Get yesterday's price data
     * @param params {}
     * @returns {*} an object containing price and volume data from the
     * previous day in a number of currencies
     */
    yesterday(params: YesterdayOptions): Promise<any>;
    /**
     * Get price data from up to 90 days prior to today
     * @param params { currencyName: the code for the desired currency, for example USD }
     * @returns {*} an object containing average prices from a number of previous days
     */
    lastDays(params: LastDaysOptions): Promise<any>;
}
//# sourceMappingURL=markets.d.ts.map