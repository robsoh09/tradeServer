"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.commonTssMethods = exports.encryptYShare = exports.sendSignatureShare = exports.getTxRequest = exports.sendUserToBitgoGShare = exports.getBitgoToUserRShare = exports.offerUserToBitgoRShare = exports.createUserToBitGoGShare = exports.createUserSignShare = exports.createCombinedKey = exports.ShareKeyPosition = exports.DKLSMethods = exports.ECDSAMethodTypes = exports.ECDSAMethods = exports.EDDSAMethodTypes = exports.EDDSAMethods = void 0;
const eddsa_1 = __importStar(require("./eddsa"));
exports.EDDSAMethods = eddsa_1.default;
Object.defineProperty(exports, "EDDSAMethodTypes", { enumerable: true, get: function () { return eddsa_1.EDDSAMethodTypes; } });
const ecdsa_1 = __importStar(require("./ecdsa"));
exports.ECDSAMethods = ecdsa_1.default;
Object.defineProperty(exports, "ECDSAMethodTypes", { enumerable: true, get: function () { return ecdsa_1.ECDSAMethodTypes; } });
Object.defineProperty(exports, "DKLSMethods", { enumerable: true, get: function () { return ecdsa_1.DKLSMethods; } });
var types_1 = require("./types");
Object.defineProperty(exports, "ShareKeyPosition", { enumerable: true, get: function () { return types_1.ShareKeyPosition; } });
// exporting this types for backward compatibility.
/** @deprecated Use EDDSAMethods */
var eddsa_2 = require("./eddsa");
Object.defineProperty(exports, "createCombinedKey", { enumerable: true, get: function () { return eddsa_2.createCombinedKey; } });
Object.defineProperty(exports, "createUserSignShare", { enumerable: true, get: function () { return eddsa_2.createUserSignShare; } });
Object.defineProperty(exports, "createUserToBitGoGShare", { enumerable: true, get: function () { return eddsa_2.createUserToBitGoGShare; } });
Object.defineProperty(exports, "offerUserToBitgoRShare", { enumerable: true, get: function () { return eddsa_2.offerUserToBitgoRShare; } });
Object.defineProperty(exports, "getBitgoToUserRShare", { enumerable: true, get: function () { return eddsa_2.getBitgoToUserRShare; } });
Object.defineProperty(exports, "sendUserToBitgoGShare", { enumerable: true, get: function () { return eddsa_2.sendUserToBitgoGShare; } });
Object.defineProperty(exports, "getTxRequest", { enumerable: true, get: function () { return eddsa_2.getTxRequest; } });
Object.defineProperty(exports, "sendSignatureShare", { enumerable: true, get: function () { return eddsa_2.sendSignatureShare; } });
Object.defineProperty(exports, "encryptYShare", { enumerable: true, get: function () { return eddsa_2.encryptYShare; } });
exports.commonTssMethods = __importStar(require("./common"));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYml0Z28vdHNzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaURBQXlEO0FBR2hELHVCQUhGLGVBQVksQ0FHRTtBQUFFLGlHQUhBLHdCQUFnQixPQUdBO0FBRnZDLGlEQUFzRTtBQUU3Qix1QkFGbEMsZUFBWSxDQUVrQztBQUFFLGlHQUZoQyx3QkFBZ0IsT0FFZ0M7QUFBRSw0RkFGaEMsbUJBQVcsT0FFZ0M7QUFDcEYsaUNBQTJDO0FBQWxDLHlHQUFBLGdCQUFnQixPQUFBO0FBRXpCLG1EQUFtRDtBQUNuRCxtQ0FBbUM7QUFDbkMsaUNBY2lCO0FBYmYsMEdBQUEsaUJBQWlCLE9BQUE7QUFDakIsNEdBQUEsbUJBQW1CLE9BQUE7QUFDbkIsZ0hBQUEsdUJBQXVCLE9BQUE7QUFDdkIsK0dBQUEsc0JBQXNCLE9BQUE7QUFDdEIsNkdBQUEsb0JBQW9CLE9BQUE7QUFDcEIsOEdBQUEscUJBQXFCLE9BQUE7QUFDckIscUdBQUEsWUFBWSxPQUFBO0FBQ1osMkdBQUEsa0JBQWtCLE9BQUE7QUFDbEIsc0dBQUEsYUFBYSxPQUFBO0FBT2YsNkRBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVERFNBTWV0aG9kcywgeyBFRERTQU1ldGhvZFR5cGVzIH0gZnJvbSAnLi9lZGRzYSc7XG5pbXBvcnQgRUNEU0FNZXRob2RzLCB7IEVDRFNBTWV0aG9kVHlwZXMsIERLTFNNZXRob2RzIH0gZnJvbSAnLi9lY2RzYSc7XG5cbmV4cG9ydCB7IEVERFNBTWV0aG9kcywgRUREU0FNZXRob2RUeXBlcywgRUNEU0FNZXRob2RzLCBFQ0RTQU1ldGhvZFR5cGVzLCBES0xTTWV0aG9kcyB9O1xuZXhwb3J0IHsgU2hhcmVLZXlQb3NpdGlvbiB9IGZyb20gJy4vdHlwZXMnO1xuXG4vLyBleHBvcnRpbmcgdGhpcyB0eXBlcyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eS5cbi8qKiBAZGVwcmVjYXRlZCBVc2UgRUREU0FNZXRob2RzICovXG5leHBvcnQge1xuICBjcmVhdGVDb21iaW5lZEtleSxcbiAgY3JlYXRlVXNlclNpZ25TaGFyZSxcbiAgY3JlYXRlVXNlclRvQml0R29HU2hhcmUsXG4gIG9mZmVyVXNlclRvQml0Z29SU2hhcmUsXG4gIGdldEJpdGdvVG9Vc2VyUlNoYXJlLFxuICBzZW5kVXNlclRvQml0Z29HU2hhcmUsXG4gIGdldFR4UmVxdWVzdCxcbiAgc2VuZFNpZ25hdHVyZVNoYXJlLFxuICBlbmNyeXB0WVNoYXJlLFxuICBFbmNyeXB0ZWRZU2hhcmUsXG4gIERlY3J5cHRhYmxlWVNoYXJlLFxuICBDb21iaW5lZEtleSxcbiAgU2lnbmluZ01hdGVyaWFsLFxufSBmcm9tICcuL2VkZHNhJztcblxuZXhwb3J0ICogYXMgY29tbW9uVHNzTWV0aG9kcyBmcm9tICcuL2NvbW1vbic7XG4iXX0=