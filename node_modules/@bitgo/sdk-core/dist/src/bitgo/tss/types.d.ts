import { EcdsaTypes } from '@bitgo/sdk-lib-mpc';
import { KShare, OShare, WShare } from './ecdsa/types';
import { MuDShare } from './ecdsa/ecdsa';
export declare enum ShareKeyPosition {
    USER = 1,
    BACKUP = 2,
    BITGO = 3
}
export declare type TxRequestChallengeResponse = EcdsaTypes.SerializedEcdsaChallenges & {
    n: string;
};
export declare type TssEcdsaStep1ReturnMessage = {
    privateShareProof: string;
    vssProof?: string;
    userPublicGpgKey: string;
    publicShare: string;
    encryptedSignerOffsetShare: string;
    kShare: KShare;
    wShare: WShare | string;
};
export declare type TssEcdsaStep2ReturnMessage = {
    muDShare: MuDShare;
    oShare: OShare | string;
};
//# sourceMappingURL=types.d.ts.map