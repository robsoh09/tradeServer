/**
 * Zero Knowledge Range Proofs as described in (Two-party generation of DSA signatures)[1].
 * [1]: https://reitermk.github.io/papers/2004/IJIS.pdf
 */
import { EcdsaRangeProof, randomPositiveCoPrimeTo, generateSafePrimes } from '@bitgo/sdk-lib-mpc';
declare const generateNtilde: typeof EcdsaRangeProof.generateNtilde, generateNtildeProof: typeof EcdsaRangeProof.generateNtildeProof, verifyNtildeProof: typeof EcdsaRangeProof.verifyNtildeProof, prove: typeof EcdsaRangeProof.prove, proveWithCheck: typeof EcdsaRangeProof.proveWithCheck, verify: typeof EcdsaRangeProof.verify, verifyWithCheck: typeof EcdsaRangeProof.verifyWithCheck;
/**
 * @deprecated Use EcdsaRangeProof from sdk-lib-mpc instead
 */
export { generateSafePrimes, randomPositiveCoPrimeTo, generateNtilde, generateNtildeProof, verifyNtildeProof, prove, proveWithCheck, verify, verifyWithCheck, };
//# sourceMappingURL=rangeproof.d.ts.map