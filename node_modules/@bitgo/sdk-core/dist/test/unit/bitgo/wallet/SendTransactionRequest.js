"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert = __importStar(require("assert"));
const public_types_1 = require("@bitgo/public-types");
describe('SendTransactionRequest', function () {
    it('enforces codec', function () {
        assert.deepStrictEqual(public_types_1.TxSendBody.encode({
            addressType: 'p2sh',
            txFormat: 'psbt',
            comment: 'foo',
            unknown: 'bar',
        }), {
            addressType: 'p2sh',
            txFormat: 'psbt',
            comment: 'foo',
            // drops unknown properties
        });
        assert.deepStrictEqual(public_types_1.TxSendBody.encode({ txHex: '00' }), { txHex: '00' });
        assert.deepStrictEqual(public_types_1.TxSendBody.encode({ txHex: '00', addressType: 'p2sh', bar: 'omit' }), {
            txHex: '00',
            addressType: 'p2sh',
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VuZFRyYW5zYWN0aW9uUmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Rlc3QvdW5pdC9iaXRnby93YWxsZXQvU2VuZFRyYW5zYWN0aW9uUmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0NBQWlDO0FBQ2pDLHNEQUFpRDtBQUVqRCxRQUFRLENBQUMsd0JBQXdCLEVBQUU7SUFDakMsRUFBRSxDQUFDLGdCQUFnQixFQUFFO1FBQ25CLE1BQU0sQ0FBQyxlQUFlLENBQ3BCLHlCQUFVLENBQUMsTUFBTSxDQUFDO1lBQ2hCLFdBQVcsRUFBRSxNQUFNO1lBQ25CLFFBQVEsRUFBRSxNQUFNO1lBQ2hCLE9BQU8sRUFBRSxLQUFLO1lBQ2QsT0FBTyxFQUFFLEtBQUs7U0FDUixDQUFDLEVBQ1Q7WUFDRSxXQUFXLEVBQUUsTUFBTTtZQUNuQixRQUFRLEVBQUUsTUFBTTtZQUNoQixPQUFPLEVBQUUsS0FBSztZQUNkLDJCQUEyQjtTQUM1QixDQUNGLENBQUM7UUFFRixNQUFNLENBQUMsZUFBZSxDQUFDLHlCQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUM1RSxNQUFNLENBQUMsZUFBZSxDQUFDLHlCQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQVMsQ0FBQyxFQUFFO1lBQ2xHLEtBQUssRUFBRSxJQUFJO1lBQ1gsV0FBVyxFQUFFLE1BQU07U0FDcEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFzc2VydCBmcm9tICdhc3NlcnQnO1xuaW1wb3J0IHsgVHhTZW5kQm9keSB9IGZyb20gJ0BiaXRnby9wdWJsaWMtdHlwZXMnO1xuXG5kZXNjcmliZSgnU2VuZFRyYW5zYWN0aW9uUmVxdWVzdCcsIGZ1bmN0aW9uICgpIHtcbiAgaXQoJ2VuZm9yY2VzIGNvZGVjJywgZnVuY3Rpb24gKCkge1xuICAgIGFzc2VydC5kZWVwU3RyaWN0RXF1YWwoXG4gICAgICBUeFNlbmRCb2R5LmVuY29kZSh7XG4gICAgICAgIGFkZHJlc3NUeXBlOiAncDJzaCcsXG4gICAgICAgIHR4Rm9ybWF0OiAncHNidCcsXG4gICAgICAgIGNvbW1lbnQ6ICdmb28nLFxuICAgICAgICB1bmtub3duOiAnYmFyJyxcbiAgICAgIH0gYXMgYW55KSxcbiAgICAgIHtcbiAgICAgICAgYWRkcmVzc1R5cGU6ICdwMnNoJyxcbiAgICAgICAgdHhGb3JtYXQ6ICdwc2J0JyxcbiAgICAgICAgY29tbWVudDogJ2ZvbycsXG4gICAgICAgIC8vIGRyb3BzIHVua25vd24gcHJvcGVydGllc1xuICAgICAgfVxuICAgICk7XG5cbiAgICBhc3NlcnQuZGVlcFN0cmljdEVxdWFsKFR4U2VuZEJvZHkuZW5jb2RlKHsgdHhIZXg6ICcwMCcgfSksIHsgdHhIZXg6ICcwMCcgfSk7XG4gICAgYXNzZXJ0LmRlZXBTdHJpY3RFcXVhbChUeFNlbmRCb2R5LmVuY29kZSh7IHR4SGV4OiAnMDAnLCBhZGRyZXNzVHlwZTogJ3Ayc2gnLCBiYXI6ICdvbWl0JyB9IGFzIGFueSksIHtcbiAgICAgIHR4SGV4OiAnMDAnLFxuICAgICAgYWRkcmVzc1R5cGU6ICdwMnNoJyxcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==