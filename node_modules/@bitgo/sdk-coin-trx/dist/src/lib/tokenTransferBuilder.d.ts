import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { BaseKey } from '@bitgo/sdk-core';
import { ContractCallBuilder } from './contractCallBuilder';
import { Transaction } from './transaction';
export declare class TokenTransferBuilder extends ContractCallBuilder {
    private _recipientAddress;
    private _amount;
    constructor(_coinConfig: Readonly<CoinConfig>);
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
    /**
     * Set the data with the transfer method call and parameters
     *
     * @param recipientAddress - recipient of token transfer
     * @param amount - token amount
     */
    tokenTransferData(recipientAddress: string, amount: string): this;
    /** @inheritdoc */
    protected fromImplementation(rawTransaction: any): Transaction;
    /** @inheritdoc */
    protected signImplementation(key: BaseKey): Transaction;
}
//# sourceMappingURL=tokenTransferBuilder.d.ts.map