import { TransactionExplanation as BaseTransactionExplanation, Entry, TransactionType } from '@bitgo/sdk-core';
import { EVMBaseTx as DeprecatedEVMBaseTx, EVMOutput, Tx as EVMTx } from 'avalanche/dist/apis/evm';
import { BaseTx as DeprecatedPMVBaseTx, Tx as PVMTx, TransferableOutput as DeprecatedTransferableOutput } from 'avalanche/dist/apis/platformvm';
import { avaxSerial, pvmSerial, UnsignedTx, TransferableOutput } from '@bitgo-forks/avalanchejs';
export interface AvaxpEntry extends Entry {
    id: string;
}
export interface TransactionExplanation extends BaseTransactionExplanation {
    type: TransactionType;
    rewardAddresses: string[];
    inputs: Entry[];
}
/**
 * Method names for the transaction method. Names change based on the type of transaction e.g 'bond' for the staking transaction
 */
export declare enum MethodNames {
    addDelegator = 0,
    addValidator = 1
}
/**
 * The transaction data returned from the toJson() function of a transaction
 */
export interface TxData {
    id: string;
    inputs: Entry[];
    type: TransactionType;
    fromAddresses: string[];
    threshold: number;
    locktime: string;
    signatures: string[];
    outputs: Entry[];
    changeOutputs: Entry[];
    sourceChain?: string;
    destinationChain?: string;
}
/**
 * Decoded UTXO object. This is for a single utxo
 *
 * @param {number} outputID
 * @param {string} amount Amount as a Big Number string
 * @param {string} txid Transaction ID encoded as cb58
 * @param {string} outputidx Output index as a string
 */
export declare type DecodedUtxoObj = {
    outputID: number;
    amount: string;
    txid: string;
    outputidx: string;
    threshold: number;
    addresses: string[];
    addressesIndex?: number[];
};
/**
 * TypeId value for SECP256K1 Transfer Output
 *
 * {@link https://docs.avax.network/specs/platform-transaction-serialization#secp256k1-transfer-output-example }
 */
export declare const SECP256K1_Transfer_Output = 7;
export declare const ADDRESS_SEPARATOR = "~";
export declare const INPUT_SEPARATOR = ":";
export declare type DeprecatedTx = PVMTx | EVMTx;
export declare type DeprecatedBaseTx = DeprecatedPMVBaseTx | DeprecatedEVMBaseTx;
export declare type Tx = DeprecatedTx | pvmSerial.BaseTx | UnsignedTx;
export declare type BaseTx = avaxSerial.BaseTx;
export declare type AvaxTx = avaxSerial.AvaxTx;
export declare type DeprecatedOutput = DeprecatedTransferableOutput | EVMOutput;
export declare type Output = TransferableOutput;
//# sourceMappingURL=iface.d.ts.map