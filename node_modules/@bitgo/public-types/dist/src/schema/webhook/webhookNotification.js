"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookNotification = void 0;
const t = __importStar(require("io-ts"));
const io_ts_types_1 = require("io-ts-types");
exports.WebhookNotification = t.intersection([
    t.type({
        id: t.string,
    }),
    t.partial({
        type: t.string,
        wallet: t.string,
        url: t.string,
        hash: t.string,
        coin: t.string,
        coinChain: t.string,
        transfer: t.string,
        state: t.string,
        simulation: t.boolean,
        retries: t.number,
        webhook: t.string,
        updatedAt: io_ts_types_1.DateFromISOString,
        nextAttempt: io_ts_types_1.DateFromISOString,
        version: t.number,
        allowBlockedHosts: t.boolean,
        heightToConfirm: t.number,
        payload: t.string,
        response: t.partial({
            code: t.unknown,
            type: t.string,
            body: t.string,
            error: t.string,
        }),
    }),
]);
//# sourceMappingURL=webhookNotification.js.map