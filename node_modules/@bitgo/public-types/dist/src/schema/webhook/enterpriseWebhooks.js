"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListEnterpriseWebhooksResponse = exports.ListEnterpriseWebhooksRequestBodyC = exports.ListEnterpriseWebhooksRequestBody = exports.AddEnterpriseWebhookRequestBodyC = exports.AddEnterpriseWebhookRequestBody = void 0;
const webhookType_1 = require("./webhookType");
const io_ts_types_1 = require("io-ts-types");
const utils_1 = require("../../utils");
const t = __importStar(require("io-ts"));
const webhook_1 = require("./webhook");
exports.AddEnterpriseWebhookRequestBody = {
    type: webhookType_1.EnterpriseWebhookType,
    url: io_ts_types_1.NonEmptyString,
    label: (0, utils_1.Optional)(t.string),
};
exports.AddEnterpriseWebhookRequestBodyC = t.type({
    ...exports.AddEnterpriseWebhookRequestBody,
});
exports.ListEnterpriseWebhooksRequestBody = {
    type: (0, utils_1.Optional)(webhookType_1.EnterpriseWebhookType),
    limit: utils_1.optionalStringOrNumber,
    prevId: utils_1.optionalString,
};
exports.ListEnterpriseWebhooksRequestBodyC = t.type({
    ...exports.ListEnterpriseWebhooksRequestBody,
});
exports.ListEnterpriseWebhooksResponse = t.intersection([
    t.type({
        webhooks: t.array(webhook_1.Webhook),
    }),
    t.partial({
        nextBatchPrevId: (0, utils_1.Optional)(t.union([t.string, t.undefined])),
    }),
]);
//# sourceMappingURL=enterpriseWebhooks.js.map