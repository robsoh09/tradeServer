"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MPCv2KeyGenRound3Response = exports.MPCv2KeyGenRound3Request = exports.MPCv2KeyGenRound2Response = exports.MPCv2KeyGenRound2Request = exports.MPCv2KeyGenRound1Response = exports.MPCv2KeyGenRound1Request = void 0;
const t = __importStar(require("io-ts"));
const io_ts_types_1 = require("io-ts-types");
const common_1 = require("../common");
exports.MPCv2KeyGenRound1Request = t.type({
    userGpgPublicKey: io_ts_types_1.NonEmptyString,
    backupGpgPublicKey: io_ts_types_1.NonEmptyString,
    userMsg1: common_1.MPCv2BroadcastMessage,
    backupMsg1: common_1.MPCv2BroadcastMessage,
});
exports.MPCv2KeyGenRound1Response = t.type({
    walletGpgPubKeySigs: io_ts_types_1.NonEmptyString,
    sessionId: io_ts_types_1.NonEmptyString,
    bitgoMsg1: common_1.MPCv2BroadcastMessage,
    bitgoToUserMsg2: common_1.MPCv2P2PMessage,
    bitgoToBackupMsg2: common_1.MPCv2P2PMessage,
});
exports.MPCv2KeyGenRound2Request = t.type({
    sessionId: io_ts_types_1.NonEmptyString,
    userMsg2: common_1.MPCv2P2PMessage,
    userCommitment2: io_ts_types_1.NonEmptyString,
    backupMsg2: common_1.MPCv2P2PMessage,
    backupCommitment2: io_ts_types_1.NonEmptyString,
});
exports.MPCv2KeyGenRound2Response = t.type({
    sessionId: io_ts_types_1.NonEmptyString,
    bitgoCommitment2: io_ts_types_1.NonEmptyString,
    bitgoToUserMsg3: common_1.MPCv2P2PMessage,
    bitgoToBackupMsg3: common_1.MPCv2P2PMessage,
});
exports.MPCv2KeyGenRound3Request = t.type({
    sessionId: io_ts_types_1.NonEmptyString,
    userMsg3: common_1.MPCv2P2PMessage,
    backupMsg3: common_1.MPCv2P2PMessage,
    userMsg4: common_1.MPCv2BroadcastMessage,
    backupMsg4: common_1.MPCv2BroadcastMessage,
});
exports.MPCv2KeyGenRound3Response = t.type({
    sessionId: io_ts_types_1.NonEmptyString,
    commonKeychain: io_ts_types_1.NonEmptyString,
    bitgoMsg4: common_1.MPCv2BroadcastMessage,
});
//# sourceMappingURL=keygenRound.js.map