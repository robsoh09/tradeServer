import * as t from "io-ts";
import { DateFromISOString } from "io-ts-types";
import { TransactionRequestState } from "../transactionRequest/transactionRequestState";
import { TransactionState } from "../transactionRequest/transactionState";
import { WebhookState } from "./webhookState";
import { WebhookType } from "./webhookType";
import { WebhookScope } from "./webhookScope";

export const Webhook = t.intersection([
  t.type({
    id: t.string,
    created: DateFromISOString,
    coin: t.string,
    url: t.string,
    version: t.number,
    state: WebhookState,
    successiveFailedAttempts: t.number,
    listenToFailureStates: t.boolean,
  }),
  t.partial({
    label: t.string,
    walletId: t.string,
    enterpriseId: t.string,
    organizationId: t.string,
    scope: WebhookScope,
    userId: t.string,
    type: WebhookType,
    numConfirmations: t.number,
    lastAttempt: DateFromISOString,
    failingSince: DateFromISOString,
    allToken: t.boolean,
    txRequestStates: t.array(TransactionRequestState),
    txRequestTransactionStates: t.array(TransactionState),
  }),
]);
