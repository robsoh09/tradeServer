import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { BaseTransactionBuilderFactory } from '@bitgo/sdk-core';
import { WalletInitializationBuilder } from './walletInitializationBuilder';
import { CoinTransferBuilder } from './coinTransferBuilder';
import { TransactionBuilder } from './transactionBuilder';
import { Transaction } from './transaction';
import { TokenAssociateBuilder } from './tokenAssociateBuilder';
import { TokenTransferBuilder } from './tokenTransferBuilder';
export declare class TransactionBuilderFactory extends BaseTransactionBuilderFactory {
    constructor(_coinConfig: Readonly<CoinConfig>);
    /** @inheritdoc */
    getWalletInitializationBuilder(tx?: Transaction): WalletInitializationBuilder;
    /** @inheritDoc */
    getTransferBuilder(tx?: Transaction): CoinTransferBuilder;
    /**
     * Returns a specific builder to create a funds token transfer transaction
     */
    getTokenTransferBuilder(tx?: Transaction): TokenTransferBuilder;
    /**
     * Returns a builder to create a token association transaction
     */
    getTokenAssociateBuilder(tx?: Transaction): TokenAssociateBuilder;
    /** @inheritDoc */
    from(raw: Uint8Array | string): TransactionBuilder;
    /**
     * Initialize the builder with the given transaction
     *
     * @param {Transaction | undefined} tx - the transaction used to initialize the builder
     * @param {TransactionBuilder} builder - the builder to be initialized
     * @returns {TransactionBuilder} the builder initialized
     */
    private initializeBuilder;
    /**
     * Returns a transaction instance from the encoded value
     *
     * @param {Uint8Array | string} rawTransaction - encoded transaction
     * @returns {Transaction} the parsed transaction instance
     */
    private parseRawTransaction;
    /**
     * Check the raw transaction has a valid format in the blockchain context, throw otherwise.
     *
     * @param {any} rawTransaction - Transaction in any format
     */
    private validateRawTransaction;
}
//# sourceMappingURL=transactionBuilderFactory.d.ts.map