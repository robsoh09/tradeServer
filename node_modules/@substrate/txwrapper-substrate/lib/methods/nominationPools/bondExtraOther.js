"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bondExtraOther = void 0;
const txwrapper_core_1 = require("@substrate/txwrapper-core");
/**
 * `origin` bonds funds from `extra` for some pool member `member` into their respective
 * pools.
 *
 * `origin` can bond extra funds from free balance or pending rewards when `origin ==
 * other`.
 *
 * In the case of `origin != other`, `origin` can only bond extra pending rewards of
 * `other` members assuming set_claim_permission for the given member is
 * `PermissionlessAll` or `PermissionlessCompound`.
 *
 * @param args - Arguments specific to this method.
 * @param info - Information required to construct the transaction.
 * @param options - Registry and metadata used for constructing the method.
 */
function bondExtraOther(args, info, options) {
    return (0, txwrapper_core_1.defineMethod)({
        method: {
            args,
            name: 'bondExtraOther',
            pallet: 'nominationPools',
        },
        ...info,
    }, options);
}
exports.bondExtraOther = bondExtraOther;
//# sourceMappingURL=bondExtraOther.js.map