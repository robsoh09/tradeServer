"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.join = void 0;
const txwrapper_core_1 = require("@substrate/txwrapper-core");
/**
 * Stake funds with a pool. The amount to bond is transferred from the member to the
 * pools account and immediately increases the pools bond.
 *
 * Note:
 *
 * - An account can only be a member of a single pool.
 * - An account cannot join the same pool multiple times.
 * - This call will *not* dust the member account, so the member must have at least
 *   `existential deposit + amount` in their account.
 * - Only a pool with [`PoolState::Open`] can be joined
 *
 * @param args - Arguments specific to this method.
 * @param info - Information required to construct the transaction.
 * @param options - Registry and metadata used for constructing the method.
 */
function join(args, info, options) {
    return (0, txwrapper_core_1.defineMethod)({
        method: {
            args,
            name: 'join',
            pallet: 'nominationPools',
        },
        ...info,
    }, options);
}
exports.join = join;
//# sourceMappingURL=join.js.map