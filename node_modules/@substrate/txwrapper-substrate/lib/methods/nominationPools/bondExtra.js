"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bondExtra = void 0;
const txwrapper_core_1 = require("@substrate/txwrapper-core");
/**
 * Bond `extra` more funds from `origin` into the pool to which they already belong.
 *
 * Additional funds can come from either the free balance of the account, or from the
 * accumulated rewards, see [`BondExtra`].
 *
 * Bonding extra funds implies an automatic payout of all pending rewards as well.
 * See `bond_extra_other` to bond pending rewards of `other` members.
 *
 * NOTE: this transaction is implemented with the sole purpose of readability and
 * correctness, not optimization. We read/write several storage items multiple times instead
 * of just once, in the spirit of reusing code.
 *
 * @param args - Arguments specific to this method.
 * @param info - Information required to construct the transaction.
 * @param options - Registry and metadata used for constructing the method.
 */
function bondExtra(args, info, options) {
    return (0, txwrapper_core_1.defineMethod)({
        method: {
            args,
            name: 'bondExtra',
            pallet: 'nominationPools',
        },
        ...info,
    }, options);
}
exports.bondExtra = bondExtra;
//# sourceMappingURL=bondExtra.js.map