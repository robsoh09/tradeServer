"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withdrawUnbonded = void 0;
const txwrapper_core_1 = require("@substrate/txwrapper-core");
/**
 * Withdraw unbonded funds from `member_account`. If no bonded funds can be unbonded, an
 * error is returned.
 *
 * Under certain conditions, this call can be dispatched permissionlessly (i.e. by any
 * account).
 *
 * # Conditions for a permissionless dispatch
 *
 * The pool is in destroy mode and the target is not the depositor.
 * The target is the depositor and they are the only member in the sub pools.
 * The pool is blocked and the caller is either the root or bouncer.
 *
 * # Conditions for permissioned dispatch
 *
 * The caller is the target and they are not the depositor.
 *
 * # Note
 *
 * If the target is the depositor, the pool will be destroyed.
 *
 * @param args - Arguments specific to this method.
 * @param info - Information required to construct the transaction.
 * @param options - Registry and metadata used for constructing the method.
 */
function withdrawUnbonded(args, info, options) {
    return (0, txwrapper_core_1.defineMethod)({
        method: {
            args,
            name: 'withdrawUnbonded',
            pallet: 'nominationPools',
        },
        ...info,
    }, options);
}
exports.withdrawUnbonded = withdrawUnbonded;
//# sourceMappingURL=withdrawUnbonded.js.map