"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.limitedReserveTransferAssets = void 0;
const txwrapper_core_1 = require("@substrate/txwrapper-core");
/**
 * Transfer some assets from the local chain to the sovereign account of a destination
 * chain and forward a notification XCM.
 *
 * Fee payment on the destination side is made from the asset in the `assets` vector of
 * index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight
 * is needed than `weight_limit`, then the operation will fail and the assets send may be
 * at risk.
 *
 * @param args - Arguments specific to this method.
 * @param info - Information required to construct the transaction.
 * @param options - Registry and metadata used for constructing the method.
 */
function limitedReserveTransferAssets(args, info, options) {
    return (0, txwrapper_core_1.defineMethod)({
        method: {
            args,
            name: 'limitedReserveTransferAssets',
            pallet: 'xcmPallet',
        },
        ...info,
    }, options);
}
exports.limitedReserveTransferAssets = limitedReserveTransferAssets;
//# sourceMappingURL=limitedReserveTransferAssets.js.map