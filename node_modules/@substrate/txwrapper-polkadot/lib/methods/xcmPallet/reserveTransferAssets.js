"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reserveTransferAssets = void 0;
const txwrapper_core_1 = require("@substrate/txwrapper-core");
/**
 * Transfer some assets from the local chain to the sovereign account of a destination
 * chain and forward a notification XCM.
 *
 * Fee payment on the destination side is made from the asset in the `assets` vector of
 * index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,
 * with all fees taken as needed from the asset.
 *
 * @param args - Arguments specific to this method.
 * @param info - Information required to construct the transaction.
 * @param options - Registry and metadata used for constructing the method.
 */
function reserveTransferAssets(args, info, options) {
    return (0, txwrapper_core_1.defineMethod)({
        method: {
            args,
            name: 'reserveTransferAssets',
            pallet: 'xcmPallet',
        },
        ...info,
    }, options);
}
exports.reserveTransferAssets = reserveTransferAssets;
//# sourceMappingURL=reserveTransferAssets.js.map