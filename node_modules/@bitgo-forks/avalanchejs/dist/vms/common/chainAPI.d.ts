import type { SignedTx } from '../../serializable/avax';
import { Utxo } from '../../serializable/avax/utxo';
import type { Manager } from '../../serializable/codec';
import type { GetUTXOsInput, IssueTxParams, IssueTxResponse } from './apiModels';
import { Api } from './baseApi';
export declare abstract class ChainApi extends Api {
    protected path: string;
    protected base: string;
    protected manager: Manager;
    constructor(baseURL: string | undefined, path: string, base: string, manager: Manager);
    getUTXOs(input: GetUTXOsInput): Promise<{
        utxos: Utxo[];
        numFetched: number;
        endIndex: {
            address: string;
            utxo: string;
        };
        sourceChain?: string | undefined;
        encoding: string;
    }>;
    issueTx(issueTxParams: IssueTxParams): Promise<IssueTxResponse>;
    issueSignedTx(tx: SignedTx): Promise<IssueTxResponse>;
}
//# sourceMappingURL=chainAPI.d.ts.map