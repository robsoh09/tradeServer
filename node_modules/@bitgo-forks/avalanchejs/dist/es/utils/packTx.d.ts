import type { Manager } from '../serializable/codec';
import type { Serializable } from '../serializable/common/types';
import type { VM } from '../serializable/constants';
export interface GenericTransaction extends Serializable {
    vm: VM;
}
export declare function getManagerForVM(vm: VM): Manager;
export declare function unpackWithManager(vm: VM, txBytes: Uint8Array): import("../vms/common").Transaction;
export declare function packTx(tx: GenericTransaction): Uint8Array;
export declare function getDefaultCodecFromTx(tx: GenericTransaction): import("../serializable/codec").Codec;
//# sourceMappingURL=packTx.d.ts.map