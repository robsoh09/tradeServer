import type { Amounter } from '../../common/types';
import { BigIntPr } from '../../primitives';
import { OutputOwners } from './outputOwners';
import { TypeSymbols } from '../../constants';
export declare class TransferOutput implements Amounter {
    readonly amt: BigIntPr;
    readonly outputOwners: OutputOwners;
    readonly _type = TypeSymbols.TransferOutput;
    constructor(amt: BigIntPr, outputOwners: OutputOwners);
    amount(): bigint;
    getLocktime(): bigint;
    getOwners(): Uint8Array[];
    getThreshold(): number;
    static fromBytes(bytes: Uint8Array): [TransferOutput, Uint8Array];
    toBytes(codec: any): Uint8Array;
}
//# sourceMappingURL=transferOutput.d.ts.map