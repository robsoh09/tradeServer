import { BigIntPr, Int } from '../../primitives';
import { Address } from '../common/address';
import { TypeSymbols } from '../../constants';
export declare class OutputOwners {
    readonly locktime: BigIntPr;
    readonly threshold: Int;
    readonly addrs: Address[];
    _type: TypeSymbols;
    constructor(locktime: BigIntPr, threshold: Int, addrs: Address[]);
    static fromNative(address: Uint8Array[], locktime?: bigint, threshold?: number): OutputOwners;
    static fromBytes(bytes: Uint8Array, codec: any): [OutputOwners, Uint8Array];
    toBytes(codec: any): Uint8Array;
    equals(other: OutputOwners): boolean;
}
//# sourceMappingURL=outputOwners.d.ts.map