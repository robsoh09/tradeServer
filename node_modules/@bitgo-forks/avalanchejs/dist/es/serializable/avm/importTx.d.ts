import { BaseTx } from '../avax/baseTx';
import { TransferableInput } from '../avax/transferableInput';
import type { Codec } from '../codec/codec';
import { Id } from '../fxs/common';
import { AVMTx } from './abstractTx';
import { TypeSymbols } from '../constants';
export declare class ImportTx extends AVMTx {
    readonly baseTx: BaseTx;
    readonly sourceChain: Id;
    readonly ins: TransferableInput[];
    _type: TypeSymbols;
    constructor(baseTx: BaseTx, sourceChain: Id, ins: TransferableInput[]);
    getSigIndices(): number[][];
    static fromBytes(bytes: Uint8Array, codec: Codec): [ImportTx, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=importTx.d.ts.map