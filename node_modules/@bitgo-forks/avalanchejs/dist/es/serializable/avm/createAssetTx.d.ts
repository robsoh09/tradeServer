import { BaseTx } from '../avax/baseTx';
import type { Codec } from '../codec/codec';
import { Byte, Stringpr } from '../primitives';
import { InitialState } from './initialState';
import { TypeSymbols } from '../constants';
export declare class CreateAssetTx {
    private readonly baseTx;
    private readonly name;
    private readonly symbol;
    private readonly denomination;
    private readonly initialStates;
    _type: TypeSymbols;
    constructor(baseTx: BaseTx, name: Stringpr, symbol: Stringpr, denomination: Byte, initialStates: InitialState[]);
    static fromBytes(bytes: Uint8Array, codec: Codec): [CreateAssetTx, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=createAssetTx.d.ts.map