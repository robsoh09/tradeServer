import type { Codec } from '../codec/codec';
import { Id } from '../fxs/common';
import { Validator } from './validator';
import { TypeSymbols } from '../constants';
export declare class SubnetValidator {
    readonly validator: Validator;
    readonly subnetId: Id;
    _type: TypeSymbols;
    constructor(validator: Validator, subnetId: Id);
    static fromNative(nodeId: string, startTime: bigint, endTime: bigint, weight: bigint, subnetId: Id): SubnetValidator;
    static fromBytes(bytes: Uint8Array, codec: Codec): [SubnetValidator, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=subnetValidator.d.ts.map