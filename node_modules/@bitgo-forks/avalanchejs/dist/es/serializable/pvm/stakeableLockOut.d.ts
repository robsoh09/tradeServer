import { Codec } from '../codec/codec';
import type { Amounter } from '../common/types';
import { BigIntPr } from '../primitives';
import { TypeSymbols } from '../constants';
export declare class StakeableLockOut implements Amounter {
    readonly lockTime: BigIntPr;
    readonly transferOut: Amounter;
    _type: TypeSymbols;
    constructor(lockTime: BigIntPr, transferOut: Amounter);
    amount(): bigint;
    getStakeableLocktime(): bigint;
    getLocktime(): bigint;
    static fromBytes(bytes: Uint8Array, codec: Codec): [StakeableLockOut, Uint8Array];
    getOwners(): Uint8Array[];
    getOutputOwners(): import("..").OutputOwners;
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=stakeableLockOut.d.ts.map