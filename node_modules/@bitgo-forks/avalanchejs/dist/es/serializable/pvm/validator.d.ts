import type { Codec } from '../codec/codec';
import { NodeId } from '../fxs/common/nodeId';
import { BigIntPr } from '../primitives';
import { TypeSymbols } from '../constants';
export declare class Validator {
    readonly nodeId: NodeId;
    readonly startTime: BigIntPr;
    readonly endTime: BigIntPr;
    readonly weight: BigIntPr;
    _type: TypeSymbols;
    constructor(nodeId: NodeId, startTime: BigIntPr, endTime: BigIntPr, weight: BigIntPr);
    static fromNative(nodeId: string, startTime: bigint, endTime: bigint, weight: bigint): Validator;
    static fromBytes(bytes: Uint8Array, codec: Codec): [Validator, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=validator.d.ts.map