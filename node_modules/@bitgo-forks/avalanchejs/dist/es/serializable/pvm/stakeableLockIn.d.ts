import type { Codec } from '../codec/codec';
import type { Amounter } from '../common/types';
import { BigIntPr } from '../primitives';
import { TypeSymbols } from '../constants';
export declare class StakeableLockIn {
    readonly lockTime: BigIntPr;
    readonly transferableInput: Amounter;
    _type: TypeSymbols;
    constructor(lockTime: BigIntPr, transferableInput: Amounter);
    static fromBytes(bytes: Uint8Array, codec: Codec): [StakeableLockIn, Uint8Array];
    amount(): bigint;
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=stakeableLockIn.d.ts.map