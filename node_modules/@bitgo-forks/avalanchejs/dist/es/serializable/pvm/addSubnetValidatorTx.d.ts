import { BaseTx } from '../avax/baseTx';
import { Codec } from '../codec/codec';
import type { Serializable } from '../common/types';
import { AbstractSubnetTx } from './abstractSubnetTx';
import { SubnetValidator } from './subnetValidator';
import { TypeSymbols } from '../constants';
export declare class AddSubnetValidatorTx extends AbstractSubnetTx {
    readonly baseTx: BaseTx;
    readonly subnetValidator: SubnetValidator;
    readonly subnetAuth: Serializable;
    _type: TypeSymbols;
    constructor(baseTx: BaseTx, subnetValidator: SubnetValidator, subnetAuth: Serializable);
    getSubnetID(): import("..").Id;
    static fromBytes(bytes: Uint8Array, codec: Codec): [AddSubnetValidatorTx, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=addSubnetValidatorTx.d.ts.map