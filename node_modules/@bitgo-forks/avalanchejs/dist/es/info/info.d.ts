import { Api } from '../vms/common/baseApi';
import type { GetBlockchainIDResponse, GetNetworkIdResponse, GetNetworkNameResponse, GetNodeIdResponse, GetNodeIpResponse, GetNodeVersionReply, GetPeersResponse, GetTxFeeResponse, isBootstrapped, UptimeResponse } from './model';
export declare class Info extends Api {
    private readonly baseURL;
    constructor(baseURL?: string);
    getNodeVersion(): Promise<GetNodeVersionReply>;
    getNodeId(): Promise<GetNodeIdResponse>;
    getNodeIp(): Promise<GetNodeIpResponse>;
    getNetworkId(): Promise<GetNetworkIdResponse>;
    getNetworkName(): Promise<GetNetworkNameResponse>;
    getBlockchainId(alias: string): Promise<GetBlockchainIDResponse>;
    peers(nodeIDs?: string[]): Promise<GetPeersResponse>;
    isBootstrapped(chain: string): Promise<isBootstrapped>;
    getTxFee(): Promise<GetTxFeeResponse>;
    uptime(): Promise<UptimeResponse>;
    getVMs(): Promise<Map<string, string[]>>;
}
//# sourceMappingURL=info.d.ts.map