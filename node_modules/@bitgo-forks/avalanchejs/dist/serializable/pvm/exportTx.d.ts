import { BaseTx } from '../avax/baseTx';
import { TransferableOutput } from '../avax/transferableOutput';
import type { Codec } from '../codec/codec';
import { Id } from '../fxs/common';
import { PVMTx } from './abstractTx';
import { TypeSymbols } from '../constants';
export declare class ExportTx extends PVMTx {
    readonly baseTx: BaseTx;
    readonly destination: Id;
    readonly outs: TransferableOutput[];
    _type: TypeSymbols;
    constructor(baseTx: BaseTx, destination: Id, outs: TransferableOutput[]);
    static fromBytes(bytes: Uint8Array, codec: Codec): [ExportTx, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=exportTx.d.ts.map