import type { Codec } from '../codec';
import { Id } from '../fxs/common/id';
import { Int } from '../primitives';
import { TypeSymbols } from '../constants';
export declare class UTXOID {
    readonly txID: Id;
    readonly outputIdx: Int;
    _type: TypeSymbols;
    constructor(txID: Id, outputIdx: Int);
    static fromBytes(bytes: Uint8Array, codec: Codec): [UTXOID, Uint8Array];
    static fromNative(txId: string, outputIdx: number): UTXOID;
    static compare(id1: UTXOID, id2: UTXOID): number;
    toBytes(codec: any): Uint8Array;
    ID(): string;
}
//# sourceMappingURL=utxoId.d.ts.map