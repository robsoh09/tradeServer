import { Codec } from '../codec/codec';
import type { Serializable } from '../common/types';
import { Id } from '../fxs/common/id';
import { UTXOID } from './utxoId';
import { TypeSymbols } from '../constants';
export declare class TransferableOp {
    private readonly assetId;
    private readonly UTXOId;
    private readonly transferOp;
    _type: TypeSymbols;
    constructor(assetId: Id, UTXOId: UTXOID[], transferOp: Serializable);
    static fromBytes(bytes: Uint8Array, codec: Codec): [TransferableOp, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=transferableOp.d.ts.map