import type { Transaction } from '../../vms/common/transaction';
import { Codec } from '../codec/codec';
import type { Serializable } from '../common/types';
import type { Credential } from '../fxs/secp256k1';
import { TypeSymbols } from '../constants';
export declare class SignedTx {
    readonly unsignedTx: Transaction;
    readonly credentials: Serializable[];
    _type: TypeSymbols;
    constructor(unsignedTx: Transaction, credentials: Serializable[]);
    static fromBytes(bytes: Uint8Array, codec: Codec): [SignedTx, Uint8Array];
    getCredentials(): Credential[];
    getAllSignatures(): string[];
    toBytes(): Uint8Array;
}
//# sourceMappingURL=signedTx.d.ts.map