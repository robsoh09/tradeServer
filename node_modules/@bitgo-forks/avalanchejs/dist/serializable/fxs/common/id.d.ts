import { customInspectSymbol } from '../../../constants/node';
import { Primitives } from '../../primitives/primatives';
import { TypeSymbols } from '../../constants';
export declare class Id extends Primitives {
    private readonly idVal;
    _type: TypeSymbols;
    constructor(idVal: Uint8Array);
    static fromBytes(buf: Uint8Array): [Id, Uint8Array];
    static compare(id1: Id, id2: Id): number;
    [customInspectSymbol](_: any, options: any): any;
    toBytes(): Uint8Array;
    toJSON(): string;
    toString(): string;
    static fromString(str: string): Id;
    static fromHex(hex: string): Id;
    value(): string;
}
//# sourceMappingURL=id.d.ts.map