import { customInspectSymbol } from '../../../constants/node';
import { Primitives } from '../../primitives/primatives';
import { TypeSymbols } from '../../constants';
export declare class Address extends Primitives {
    private readonly address;
    _type: TypeSymbols;
    constructor(address: Uint8Array);
    static fromBytes(buf: Uint8Array): [Address, Uint8Array];
    [customInspectSymbol](_: any, options: any): any;
    toJSON(hrp?: string): `${Lowercase<string>}1${string}`;
    static fromString(addr: string): Address;
    static fromHex(hex: string): Address;
    toHex(): string;
    toBytes(): Uint8Array;
    toString(hrp?: string): `${Lowercase<string>}1${string}`;
    value(): `${Lowercase<string>}1${string}`;
}
//# sourceMappingURL=address.d.ts.map