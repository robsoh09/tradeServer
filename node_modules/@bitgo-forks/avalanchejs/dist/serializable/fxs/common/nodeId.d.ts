import { customInspectSymbol } from '../../../constants/node';
import { Primitives } from '../../primitives/primatives';
import { TypeSymbols } from '../../constants';
export declare const NodeIDPrefix = "NodeID-";
export declare class NodeId extends Primitives {
    private readonly idVal;
    _type: TypeSymbols;
    constructor(idVal: Uint8Array);
    static fromBytes(buf: Uint8Array): [NodeId, Uint8Array];
    [customInspectSymbol](_: any, options: any): any;
    toBytes(): Uint8Array;
    toJSON(): string;
    toString(): string;
    static fromString(str: string): NodeId;
    static fromHex(hex: string): NodeId;
    value(): string;
}
//# sourceMappingURL=nodeId.d.ts.map