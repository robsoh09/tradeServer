import type { Codec } from '../codec/codec';
import type { Serializable } from '../common/types';
import { Int } from '../primitives';
import { TypeSymbols } from '../constants';
export declare class InitialState {
    private readonly fxId;
    private readonly outputs;
    _type: TypeSymbols;
    constructor(fxId: Int, outputs: Serializable[]);
    static fromBytes(bytes: Uint8Array, codec: Codec): [InitialState, Uint8Array];
    toBytes(codec: Codec): Uint8Array;
}
//# sourceMappingURL=initialState.d.ts.map