import { RawTxMap } from './index.js';
export type Unit = 'eth' | 'wei' | 'gwei';
type SNB = string | number | bigint;
export type HumanizedTx = {
    from?: string;
    to: string;
    value: SNB;
    maxFeePerGas: SNB;
    maxPriorityFeePerGas: SNB;
    nonce: SNB;
    data?: string;
    gasLimit?: SNB;
    amountUnit?: Unit;
    maxFeePerGasUnit?: Unit;
    maxPriorityFeePerGasUnit?: Unit;
    chainId?: number;
};
export declare function parseUnit(val: SNB, unit: Unit): bigint;
declare const h2r: {
    nonce(val: SNB): number;
    maxFeePerGas(val: SNB, opts?: Partial<HumanizedTx>): bigint;
    maxPriorityFeePerGas(val: SNB, opts?: Partial<HumanizedTx>): bigint;
    gasLimit(val: SNB): number;
    to(val: string, opts?: Partial<HumanizedTx>): string;
    value(val: SNB, opts?: Partial<HumanizedTx>): bigint;
    data(val?: string): string;
    chainId(val: string): number;
};
type h2rf = keyof typeof h2r;
export declare function createTxMapFromFields(fields: HumanizedTx): RawTxMap;
export declare function validateField(field: h2rf, val: SNB, opts?: Partial<HumanizedTx>): string;
export declare function validateFields(raw: RawTxMap): void;
export {};
//# sourceMappingURL=tx-validator.d.ts.map