import * as abi from '../web3.js';
export declare function namehash(address: string): abi.Bytes;
export declare const ADDRESS_ZERO = "0x0000000000000000000000000000000000000000";
export declare const REGISTRY = "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
export declare const REGISTRY_CONTRACT: readonly [{
    readonly name: "resolver";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "node";
        readonly type: "bytes32";
    }];
    readonly outputs: readonly [{
        readonly type: "address";
    }];
}];
export declare const RESOLVER_CONTRACT: readonly [{
    readonly name: "addr";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "node";
        readonly type: "bytes32";
    }];
    readonly outputs: readonly [{
        readonly type: "address";
    }];
}, {
    readonly name: "name";
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "node";
        readonly type: "bytes32";
    }];
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}];
export declare function getResolver(net: abi.Web3API, name: string): Promise<abi.Option<string>>;
export declare function nameToAddress(net: abi.Web3API, name: string): Promise<abi.Option<string>>;
export declare function addressToName(net: abi.Web3API, addr: string): Promise<abi.Option<string>>;
//# sourceMappingURL=ens.d.ts.map