export declare type Status = 'ok' | 'invalidRequest' | 'unauthenticated' | 'permissionDenied' | 'notFound' | 'rateLimitExceeded' | 'internalError' | 'serviceUnavailable';
export declare type Response = {
    type: Status;
    payload: unknown;
};
export declare const Response: {
    ok: <T>(payload: T) => {
        type: "ok";
        payload: T;
    };
    invalidRequest: <T_1>(payload: T_1) => {
        type: "invalidRequest";
        payload: T_1;
    };
    unauthenticated: <T_2>(payload: T_2) => {
        type: "unauthenticated";
        payload: T_2;
    };
    permissionDenied: <T_3>(payload: T_3) => {
        type: "permissionDenied";
        payload: T_3;
    };
    notFound: <T_4>(payload: T_4) => {
        type: "notFound";
        payload: T_4;
    };
    rateLimitExceeded: <T_5>(payload: T_5) => {
        type: "rateLimitExceeded";
        payload: T_5;
    };
    internalError: <T_6>(payload: T_6) => {
        type: "internalError";
        payload: T_6;
    };
    serviceUnavailable: <T_7>(payload: T_7) => {
        type: "serviceUnavailable";
        payload: T_7;
    };
};
//# sourceMappingURL=index.d.ts.map